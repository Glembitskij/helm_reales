apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-telemetry-exemple-deployment
  namespace: omni
  labels:
    app: open-telemetry-exemple
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-telemetry-exemple
  template:
    metadata:
      labels:
        app: open-telemetry-exemple
    spec:
      containers:
        - name: open-telemetry-exemple
          image: olhitestacr1.azurecr.io/open-telemetry-exemple:1.0
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: open-telemetry-exemple-settings
              mountPath: "/app/appsettings.json"
              subPath: appsettings.json
              readOnly: true
            - name: open-telemetry-diagnostic-settings
              mountPath: "/app/OTEL_DIAGNOSTICS.json"
              subPath: OTEL_DIAGNOSTICS.json
              readOnly: true
      volumes:
        - name: open-telemetry-exemple-settings
          configMap:
            name: open-telemetry-exemple-settings
            items:
              - key: appsettings.json
                path: appsettings.json
        - name: open-telemetry-diagnostic-settings
          configMap:
            name: open-telemetry-diagnostic-settings
            items:
              - key: OTEL_DIAGNOSTICS.json
                path: OTEL_DIAGNOSTICS.json
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-telemetry-exemple-settings
  namespace: omni
data:
  appsettings.json: |-
    {
      "Logging": {
        "LogLevel": {
          "Default": "Warning",
          "System": "Warning",
          "Microsoft": "Warning"
        }
      },
      "Otlp": {
        "Endpoint": "http://otelcollector:4317",
        "Protocol": "Grpc",
        "ExportProcessorType": "Batch"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-telemetry-diagnostic-settings
  namespace: omni
data:
  OTEL_DIAGNOSTICS.json: |-
    {
      "LogDirectory": ".",
      "FileSize": 32768,
      "LogLevel": "LogAlways"
    }

